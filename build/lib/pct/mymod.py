# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/06_mymod.ipynb (unless otherwise specified).

__all__ = ['MyNamer']

# Cell
class MyNamer:
    "A utility for ensuring the names of functions are unique."
    __instance = None
    @staticmethod
    def getInstance():
      """ Static access method. """
      if MyNamer.__instance == None:
         MyNamer()
      return MyNamer.__instance

    def __init__(self):
      """ Virtually private constructor. """
      if MyNamer.__instance != None:
         raise Exception("This class is a singleton!")
      else:
         MyNamer.__instance = self
      self.names = {}

    def clear(self):
      self.names = {}

    def get_name(self, name):
        if name in self.names.keys():
            num = self.names[name]+1
            self.names[name]=num
            name = f'{name}{num}'
        #else:
        self.names[name]=0
        return name